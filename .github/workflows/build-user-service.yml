name: Build and Test(Newman E2E) User Service

on:
  push:
    branches:
      - main
    paths:
      - 'back-end/services/user/**'
  pull_request:
    branches:
      - main
    paths:
      - 'back-end/services/user/**'

jobs:
  build-and-test-user-service:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Config Server JAR
        run: mvn -f back-end/services/config-server/pom.xml clean package -DskipTests

      - name: Build Discovery Service JAR
        run: mvn -f back-end/services/discovery/pom.xml clean package -DskipTests

      - name: Build Gateway Service JAR
        run: mvn -f back-end/services/gateway/pom.xml clean package -DskipTests

      - name: Build User Service JAR
        run: mvn -f back-end/services/user/pom.xml clean package -DskipTests

      - name: Build User Service Docker Image
        run: |
          docker build --build-arg ISSUER_URI=${{ secrets.ISSUER_URI }} \
                       --build-arg JWK_SET_URI=${{ secrets.JWK_SET_URI }} \
                       -t ${{ secrets.DOCKER_USERNAME }}/user:latest \
                       back-end/services/user

      # Run config server container and wait for it to be ready
      - name: Run Config Server in Docker
        run: |
          docker run -d -p 8888:8888 --name config-server ${{ secrets.DOCKER_USERNAME }}/config-server:latest
          echo "Waiting for Config Server to be ready..."
          until curl --silent --fail http://localhost:8888/actuator/health; do
            echo "Waiting for Config Service to be ready..."
            sleep 5
          done

      # Run discovery service container and wait for it to be ready
      - name: Run Discovery Service in Docker
        run: |
          docker run -d -p 8761:8761 --name discovery-service ${{ secrets.DOCKER_USERNAME }}/discovery-service:latest
          echo "Waiting for Discovery Service to be ready..."
          until curl --silent --fail http://localhost:8761/actuator/health; do
            echo "Waiting for Discovery Service to be ready..."
            sleep 5
          done

      # Run gateway service container and wait for it to be ready
      - name: Run Gateway Service in Docker
        run: |
          docker run -d -p 8100:8100 --name gateway-service ${{ secrets.DOCKER_USERNAME }}/gateway-service:latest
          echo "Waiting for Gateway Service to be ready..."
          until curl --silent --fail http://localhost:8100/actuator/health; do
            echo "Waiting for Gateway Service to be ready..."
            sleep 5
          done

      # Run user service container and wait for it to be ready
      - name: Run User Service in Docker
        run: |
          docker run -d -p 8080:8080 --name user-service ${{ secrets.DOCKER_USERNAME }}/user-service:latest
          echo "Waiting for User Service to be ready..."
          until curl --silent --fail http://localhost:8080/actuator/health; do
            echo "Waiting for User Service to be ready..."
            sleep 5
          done

      # NOTE: Running keycloak, it's db and postgres locally is required. (Working on pushing configured keycloak to docker hub)

      # Run Newman tests
      - name: Run Newman Tests
        run: |
          npm install -g newman
                newman run https://api.getpostman.com/collections/34602472-90fc324c-d262-4542-894b-e4206f3bde15?apikey=${{ secrets.POSTMAN_API_KEY }} \ --environment https://api.getpostman.com/environments/34602472-df9b8687-47ab-49ea-8294-8e65e6c363a4?apikey=${{ secrets.POSTMAN_API_KEY }}

      # Push the User Service Docker Image to Docker Hub
      - name: Push User Service Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_ACCESS_TOKEN }}
          docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

      - name: Cleanup Docker Containers
        run: |
          docker rm -f config-server discovery-service gateway-service user-service
